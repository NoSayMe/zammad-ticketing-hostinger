version: '3.9'

networks:
  zammad-net:

volumes:
  zammad_data:
  postgres_data:
  elastic_data:
  certbot_conf:
  certbot_webroot:

services:
  postgres:
    build:
      context: ./services
      dockerfile: postgres/Dockerfile
    image: ${DOCKER_REGISTRY}/postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zammad-net

  elasticsearch:
    build:
      context: ./services
      dockerfile: elasticsearch/Dockerfile
    image: ${DOCKER_REGISTRY}/elasticsearch:latest
    restart: unless-stopped
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - zammad-net

  zammad:
    build:
      context: ./services
      dockerfile: zammad/Dockerfile
    image: ${DOCKER_REGISTRY}/zammad:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - elasticsearch
    environment:
      POSTGRESQL_HOST: postgres
      ELASTICSEARCH_HOST: elasticsearch
      ZAMMAD_RAILS_TRUSTED_PROXIES: 0.0.0.0/0
      ZAMMAD_FQDN: ${REMOTE_DOMAIN}
    env_file:
      - .env
    volumes:
      - zammad_data:/opt/zammad
    networks:
      - zammad-net

  nginx:
    build:
      context: ./services
      dockerfile: nginx/Dockerfile
    image: ${DOCKER_REGISTRY}/nginx:latest
    restart: unless-stopped
    depends_on:
      - zammad
    environment:
      REMOTE_DOMAIN: ${REMOTE_DOMAIN}
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - zammad-net

  certbot:
    build:
      context: ./services
      dockerfile: certbot/Dockerfile
    image: ${DOCKER_REGISTRY}/certbot:latest
    restart: unless-stopped
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    entrypoint: >
      /bin/sh -c 'trap exit TERM; while :; do
        certbot renew;
        sleep 12h & wait $${!};
      done;'
    networks:
      - zammad-net
